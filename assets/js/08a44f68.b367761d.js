"use strict";(self.webpackChunkcot_docs=self.webpackChunkcot_docs||[]).push([[928],{6343:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"local-server-setup/api","title":"API","description":"Overview","source":"@site/docs/local-server-setup/2_api.md","sourceDirName":"local-server-setup","slug":"/local-server-setup/api","permalink":"/cot-documentation/docs/local-server-setup/api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/local-server-setup/2_api.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Prerequisites","permalink":"/cot-documentation/docs/local-server-setup/prerequisites"},"next":{"title":"Client","permalink":"/cot-documentation/docs/local-server-setup/client"}}');var t=r(4848),s=r(8453);const o={},a="API",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Database Configuration",id:"database-configuration",level:2},{value:"Database Setup",id:"database-setup",level:4},{value:"App Configuration",id:"app-configuration",level:2},{value:"1. Copy the Example Configuration File",id:"1-copy-the-example-configuration-file",level:4},{value:"2. Configuration File Details",id:"2-configuration-file-details",level:4},{value:"3. Configure Required Settings",id:"3-configure-required-settings",level:4},{value:"4. Ensure Proper Configuration",id:"4-ensure-proper-configuration",level:4},{value:"Running the API",id:"running-the-api",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"api",children:"API"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Our API is built using NestJS, a progressive Node.js framework that leverages TypeScript and follows a modular architecture. It is designed to be scalable, maintainable, and efficient for handling our recruitment system's backend operations."}),"\n",(0,t.jsx)(n.h2,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["To configure the database, copy the example configuration file ",(0,t.jsx)(n.code,{children:"/api/src/db/database.config.example.ts"})," to the same directory:"]}),"\n",(0,t.jsx)(n.p,{children:"For Linux/macOS:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cp api/src/db/database.config.example.ts api/src/db/database.config.ts\n"})}),"\n",(0,t.jsx)(n.p,{children:"For Windows (Command Prompt):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"copy api\\src\\db\\database.config.example.ts api\\src\\db\\database.config.ts\n"})}),"\n",(0,t.jsx)(n.p,{children:"For Windows (PowerShell):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Copy-Item api\\src\\db\\database.config.example.ts -Destination api\\src\\db\\database.config.ts\n"})}),"\n",(0,t.jsx)(n.p,{children:"Here is the database configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"import { DataSourceOptions, DataSource } from 'typeorm';\r\n\r\nexport const DatasourceOptions = {\r\n    type: 'mysql',\r\n    host: 'localhost',\r\n    port: 3306,\r\n    username: 'root',\r\n    password: 'admin',\r\n    database: 'recruitment',\r\n    synchronize: false,\r\n} as DataSourceOptions;\r\n\r\nexport default new DataSource({\r\n    ...DatasourceOptions,\r\n    entities: ['src/**/*.entity.ts'],\r\n    migrations: ['src/db/migrations/*.ts'],\r\n    synchronize: false,\r\n    migrationsRun: false,\r\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"database-setup",children:"Database Setup"}),"\n",(0,t.jsx)(n.p,{children:"Ensure the credentials match your MySQL setup. You must create the database manually using the MySQL CLI before running the API. Use the following commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"mysql -u root -p\n"})}),"\n",(0,t.jsx)(n.p,{children:"Enter your MySQL password when prompted."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"CREATE DATABASE recruitment;\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will create the required database before running the API."}),"\n",(0,t.jsx)(n.h2,{id:"app-configuration",children:"App Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The application requires an app configuration file to be set up before running the server. This configuration file contains various settings, including API prefixes, host details, authentication credentials, and third-party service keys."}),"\n",(0,t.jsx)(n.h4,{id:"1-copy-the-example-configuration-file",children:"1. Copy the Example Configuration File"}),"\n",(0,t.jsx)(n.p,{children:"Navigate to the /api/src/ directory and copy the example configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# linux\r\ncp /api/src/appConfig.example.ts /api/src/appConfig.ts\r\n\r\n# windows\r\ncopy /api/src/appConfig.example.ts /api/src/appConfig.ts\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-configuration-file-details",children:"2. Configuration File Details"}),"\n",(0,t.jsx)(n.p,{children:"The appConfig.example.ts file looks like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"const port = 3001;\r\nconst host = `http://localhost:${port}/api`;\r\nconst cotHost = 'http://localhost:5173/community';\r\n\r\nexport const appConfig = {\r\n    prefix: 'api',\r\n    host: host,\r\n    port: port,\r\n\r\n    websocketPath: undefined,\r\n\r\n    uploadDir: './upload',\r\n    pythonCli: 'python',\r\n    imageMagickCli: 'magick',\r\n    jwtSecret: '88e2b25495e0e3b7bc573d3bb682385005d7592d',\r\n\r\n    google: {\r\n        googleClientId: '',\r\n        googleClientSecret: '',\r\n        googleCallbackUrl: host + '',\r\n        googleRedirectUrl: cotHost + '',\r\n        geminiKey: '',\r\n    },\r\n\r\n    quickbase: {\r\n        qbAuthorization: '',\r\n        qbHost: '',\r\n        qbRequisitionTable: '',\r\n        qbJobDetailsTable: '',\r\n        qbJobsRequestTable: '',\r\n        qbApplicantTable: '',\r\n        qbApplicantInfoTable: '',\r\n    },\r\n\r\n    referralForm: {\r\n        url: '',\r\n        authorization: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n    },\r\n\r\n    mail: {\r\n        transport: {\r\n            host: 'smtp.gmail.com',\r\n            port: 465,\r\n            secure: true,\r\n            auth: {\r\n                user: 'youremail@gmail.com',\r\n                pass: '',\r\n            },\r\n        },\r\n        defaults: {\r\n            from: 'No reply <youremail@gmail.com>',\r\n        },\r\n    },\r\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"3-configure-required-settings",children:"3. Configure Required Settings"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"port"})," \u2013 Defines the port for the API server."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"host"})," \u2013 The base URL for the API."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"cotHost"})," \u2013 The base URL for the community feature."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"jwtSecret"})," \u2013 A secret key used for authentication (replace with a secure value)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"google"})," \u2013 Google OAuth credentials (fill in if using Google authentication)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"quickbase"})," \u2013 API credentials for QuickBase integration (if applicable)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"referralForm"})," \u2013 Credentials for referral form authentication."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"mail"})," \u2013 SMTP settings for email notifications (replace with actual credentials)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"4-ensure-proper-configuration",children:"4. Ensure Proper Configuration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Update API keys, authentication credentials, and database settings to match your environment."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If running the server in production, make sure sensitive values like jwtSecret and SMTP credentials are not exposed in public repositories."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If using Google OAuth, populate the googleClientId, googleClientSecret, and other fields accordingly."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Google OAuth is no longer in use. It was previously implemented for applicant login, but its development has been put on hold."})}),"\n",(0,t.jsx)(n.h2,{id:"running-the-api",children:"Running the API"}),"\n",(0,t.jsx)(n.p,{children:"Once you're in the /api directory, follow these steps to get everything set up:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Run npm install to install all necessary dependencies."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Next, run the migrations with the following command:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run orm:run\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will apply the database migrations."}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"For more commands, you can refer to the package.json file. Some common commands are:"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create a migration:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run orm:create\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Revert a migration"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run orm:revert\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Generate a migration:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run orm:generate\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Build the project before running the CLI:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run build\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"You need to run this command every time you create or update a CLI to ensure that you're running the latest code."})}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:"Now, you can run the desired CLI command. For example, to populate required data, run:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run cli:run -- command=populate-required-data\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"6",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"For more details, you can refer to the api/src/cli.ts file."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Once everything is set up, run the development server:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm run start:dev\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"This will run the server in watch mode, automatically rebuilding whenever a file is modified."})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);